CREATE TABLE INVENTORY (
    SL_NO INT PRIMARY KEY AUTO_INCREMENT,
    PRODUCT_NAME VARCHAR(100) NOT NULL,
    BARCODE INT(10) UNIQUE NOT NULL,
    MRP DECIMAL(10 , 4 ) NOT NULL,
    SELLING_PRICE DECIMAL(10 , 4 ) NOT NULL,
    QTY INT(10) NOT NULL,
    EXPIRY_DATE DATE
);

CREATE TABLE USERS (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME VARCHAR(20) NOT NULL,
    LAST_NAME VARCHAR(20) NOT NULL,
    USERNAME VARCHAR(20) NOT NULL,
    PASS VARCHAR(20) NOT NULL,
    USER_ROLE VARCHAR(20) NOT NULL
);

CREATE TABLE SUPPLIER_DETAILS (
	SUPPLIER_ID INT NOT NULL,
	SUPPLIER_NAME VARCHAR(20) NOT NULL,
    SUPPLIER_CONTACT BIGINT(10) NOT NULL
);

CREATE TABLE PRODUCTS_SUPPLIED (
	PRODUCT_NAME VARCHAR(100) NOT NULL,
    BARCODE INT NOT NULL,
    SUPPLIER_NAME VARCHAR(20) NOT NULL,
    SUPPLIER_ID INT NOT NULL,
    QTY INT NOT NULL,
    MSRP DECIMAL(10,4) NOT NULL,
    MRP DECIMAL(10,4) NOT NULL,
    EXPIRY_DATE DATE,
    SUPPLIED_DATE DATE
    -- FOREIGN KEY (BARCODE) REFERENCES INVENTORY(BARCODE), 
--     FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER_DETAILS(SUPPLIER_ID) 
);

CREATE TABLE CUSTOMERS_INFO (
	CUSTOMER_NAME VARCHAR(50) NOT NULL,
    CUSTOMER_ID INT PRIMARY KEY AUTO_INCREMENT, 
    CUSTOMER_PHONE BIGINT(10) NOT NULL, 
    CUSTOMER_MAIL VARCHAR(50)
);

CREATE TABLE TRANSACTIONS (
	TRANSACTION_ID INT PRIMARY KEY AUTO_INCREMENT, 
    CUSTOMER_ID INT NOT NULL,
    TRANSACTION_DATE DATE,
    TRANSACTION_TIME TIME,
    TOTAL_AMOUNT DECIMAL(15,4),
    PAYMENT_METHOD VARCHAR(20),
    ITEMS_JSON JSON,
    BILLER_ID INT-- ,
--     FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS_INFO(CUSTOMER_ID) 
);

CREATE TABLE TRANSACTION_ITEMS (
	TRANSACTION_ID INT NOT NULL,
    CUSTOMER_ID INT NOT NULL,
    PRODUCT_NAME VARCHAR(100) NOT NULL,
    BARCODE INT NOT NULL,
    MRP DECIMAL(10,4) NOT NULL,
    RATE DECIMAL(10,4) NOT NULL,
    QTY INT NOT NULL,
    TOTAL_AMOUNT DECIMAL(15,4)-- ,
--     FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTIONS(TRANSACTION_ID), 
--     FOREIGN KEY (BARCODE) REFERENCES INVENTORY(BARCODE) 
);

CREATE TABLE BILL (
	SL_NO INT PRIMARY KEY AUTO_INCREMENT, 
    PRODUCT_NAME VARCHAR(100) NOT NULL,
    MRP DECIMAL(10,4) NOT NULL,
    RATE DECIMAL(10,4) NOT NULL,
    QTY INT NOT NULL,
    TOTAL DECIMAL(15,4)-- ,
--     FOREIGN KEY (PRODUCT_NAME, MRP, RATE) REFERENCES INVENTORY(PRODUCT_NAME, MRP, SELLING_PRICE) 
);

INSERT INTO USERS values(1,"Prarthan", "R Talwar", "admin", "administrat", "Administrator");
INSERT INTO USERS(FIRST_NAME,LAST_NAME,USERNAME,PASS,USER_ROLE) values("Rakesh", "Ronit", "dataop1", "dataoperator1", "Data Operator");
INSERT INTO USERS(FIRST_NAME,LAST_NAME,USERNAME,PASS,USER_ROLE) values("Akshit", "Kumar", "billop1", "billoperator1", "Bill Operator");

SELECT * FROM USERS;

SELECT EXISTS(SELECT * from USERS WHERE USERNAME='billop1' AND PASS='bill' );

select * from INVENTORY;


INSERT INTO INVENTORY (PRODUCT_NAME, BARCODE, MRP, SELLING_PRICE, QTY, EXPIRY_DATE) VALUES('Handwash',3524,54,43,5,'2023-09-29');


SELECT * FROM CUSTOMERS_INFO;

SELECT * FROM SUPPLIER_DETAILS;

INSERT INTO SUPPLIER_DETAILS VALUES(1,'Akash', 9876543210);

SHOW COLUMNS FROM USERS;

SELECT GROUP_CONCAT(column_name)
FROM information_schema.columns
WHERE table_name = 'USERS';

SELECT column_name
FROM information_schema.columns
WHERE table_name = 'USERS';

SELECT * FROM PRODUCTS_SUPPLIED;

select * from INVENTORY;

INSERT INTO PRODUCTS_SUPPLIED values('Manchow', 3253, 'Akash', 1, 35, 21, 345, '2024-12-30', '2023-04-09' );
INSERT INTO PRODUCTS_SUPPLIED values('choco cake', 36467, 'Akash', 1, 35, 21, 345, '2024-12-30', '2023-09-26' );


Select * from PRODUCTS_SUPPLIED where PRODUCT_NAME LIKE '%anch%';

select * from TRANSACTIONS;

select * from CUSTOMERS_INFO;
